{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar log = require(\"loglevel\").getLogger(\"phases-log\");\n\nvar calcProgressions = function (data) {\n  var parameters = data.parameters,\n      startPath = data.startPath,\n      endPath = data.endPath;\n  var numOfPhases = parameters.phases.length;\n  var progressionsPhaseScope = Array(numOfPhases);\n  var progressionsGeneralScope = Array(numOfPhases);\n  var progressions = [];\n  var durations = [];\n\n  for (var i_1 = 0; i_1 < numOfPhases; i_1++) {\n    var duration = parameters.phases[i_1].duration({\n      startPath: startPath,\n      endPath: endPath,\n      prevDurations: durations\n    });\n    durations.push(duration); // Calc progressionsPhaseScope\n\n    progressionsPhaseScope[i_1] = parameters.phases[i_1].progressionsPhaseScope({\n      startPath: startPath,\n      endPath: endPath,\n      duration: duration\n    }); // Calc progressionsGeneralScope\n\n    var prevPhaseProgressions = i_1 && progressionsGeneralScope[i_1 - 1];\n    progressionsGeneralScope[i_1] = parameters.phases[i_1].progressionsGeneralScope({\n      startPath: startPath,\n      endPath: endPath,\n      duration: duration,\n      prevPhaseProgressions: prevPhaseProgressions\n    }); // Form progressions objects\n\n    for (var keyVertexIndex = 0; keyVertexIndex < progressionsGeneralScope[i_1].length; keyVertexIndex++) progressions.push(progressionsGeneralScope[i_1][keyVertexIndex]);\n  }\n\n  log.debug(\"progressions phase scope\", progressionsPhaseScope);\n  log.debug(\"progressions general scope\", progressionsGeneralScope); // Sort progressions objects\n\n  progressions = progressions.sort(function (a, b) {\n    return a - b;\n  }); // Remove dublicates\n\n  var i = 1;\n\n  while (i < progressions.length) {\n    if (progressions[i - 1] === progressions[i]) progressions.splice(i, 1);else i += 1;\n  }\n\n  log.debug(\"progressions\", progressions);\n  return __assign({}, data, {\n    progressions: progressions,\n    progressionsGeneralScope: progressionsGeneralScope,\n    progressionsPhaseScope: progressionsPhaseScope\n  });\n};\n\nexports.default = calcProgressions;","map":{"version":3,"sources":["/home/jannat/Drive/Projects/React native/Reacts/animator/node_modules/primitivo-svg/build/phases/lib/calcProgressions.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","defineProperty","exports","value","log","require","getLogger","calcProgressions","data","parameters","startPath","endPath","numOfPhases","phases","progressionsPhaseScope","Array","progressionsGeneralScope","progressions","durations","i_1","duration","prevDurations","push","prevPhaseProgressions","keyVertexIndex","debug","sort","a","b","splice","default"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar log = require(\"loglevel\").getLogger(\"phases-log\");\nvar calcProgressions = function (data) {\n    var parameters = data.parameters, startPath = data.startPath, endPath = data.endPath;\n    var numOfPhases = parameters.phases.length;\n    var progressionsPhaseScope = Array(numOfPhases);\n    var progressionsGeneralScope = Array(numOfPhases);\n    var progressions = [];\n    var durations = [];\n    for (var i_1 = 0; i_1 < numOfPhases; i_1++) {\n        var duration = parameters.phases[i_1].duration({\n            startPath: startPath,\n            endPath: endPath,\n            prevDurations: durations\n        });\n        durations.push(duration);\n        // Calc progressionsPhaseScope\n        progressionsPhaseScope[i_1] = parameters.phases[i_1].progressionsPhaseScope({\n            startPath: startPath,\n            endPath: endPath,\n            duration: duration\n        });\n        // Calc progressionsGeneralScope\n        var prevPhaseProgressions = i_1 && progressionsGeneralScope[i_1 - 1];\n        progressionsGeneralScope[i_1] = parameters.phases[i_1].progressionsGeneralScope({\n            startPath: startPath,\n            endPath: endPath,\n            duration: duration,\n            prevPhaseProgressions: prevPhaseProgressions\n        });\n        // Form progressions objects\n        for (var keyVertexIndex = 0; keyVertexIndex < progressionsGeneralScope[i_1].length; keyVertexIndex++)\n            progressions.push(progressionsGeneralScope[i_1][keyVertexIndex]);\n    }\n    log.debug(\"progressions phase scope\", progressionsPhaseScope);\n    log.debug(\"progressions general scope\", progressionsGeneralScope);\n    // Sort progressions objects\n    progressions = progressions.sort(function (a, b) { return a - b; });\n    // Remove dublicates\n    var i = 1;\n    while (i < progressions.length) {\n        if (progressions[i - 1] === progressions[i])\n            progressions.splice(i, 1);\n        else\n            i += 1;\n    }\n    log.debug(\"progressions\", progressions);\n    return __assign({}, data, { progressions: progressions,\n        progressionsGeneralScope: progressionsGeneralScope,\n        progressionsPhaseScope: progressionsPhaseScope });\n};\nexports.default = calcProgressions;\n"]},"metadata":{},"sourceType":"script"}