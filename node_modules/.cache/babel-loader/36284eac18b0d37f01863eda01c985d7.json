{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction cuberoot(x) {\n  var y = Math.pow(Math.abs(x), 1 / 3);\n  return x < 0 ? -y : y;\n}\n\nfunction solveCubic(a, b, c, d) {\n  if (Math.abs(a) < 1e-8) {\n    // Quadratic case, ax^2+bx+c=0\n    a = b;\n    b = c;\n    c = d;\n\n    if (Math.abs(a) < 1e-8) {\n      // Linear case, ax+b=0\n      a = b;\n      b = c;\n      if (Math.abs(a) < 1e-8) // Degenerate case\n        return [];\n      return [-b / a];\n    }\n\n    var D = b * b - 4 * a * c;\n    if (Math.abs(D) < 1e-8) return [-b / (2 * a)];else if (D > 0) return [(-b + Math.sqrt(D)) / (2 * a), (-b - Math.sqrt(D)) / (2 * a)];\n    return [];\n  } // Convert to depressed cubic t^3+pt+q = 0 (subst x = t - b/3a)\n\n\n  var p = (3 * a * c - b * b) / (3 * a * a);\n  var q = (2 * b * b * b - 9 * a * b * c + 27 * a * a * d) / (27 * a * a * a);\n  var roots;\n\n  if (Math.abs(p) < 1e-8) {\n    // p = 0 -> t^3 = -q -> t = -q^1/3\n    roots = [cuberoot(-q)];\n  } else if (Math.abs(q) < 1e-8) {\n    // q = 0 -> t^3 + pt = 0 -> t(t^2+p)=0\n    roots = [0].concat(p < 0 ? [Math.sqrt(-p), -Math.sqrt(-p)] : []);\n  } else {\n    var D = q * q / 4 + p * p * p / 27;\n\n    if (Math.abs(D) < 1e-8) {\n      // D = 0 -> two roots\n      roots = [-1.5 * q / p, 3 * q / p];\n    } else if (D > 0) {\n      // Only one real root\n      var u = cuberoot(-q / 2 - Math.sqrt(D));\n      roots = [u - p / (3 * u)];\n    } else {\n      // D < 0, three roots, but needs to use complex numbers/trigonometric solution\n      var u = 2 * Math.sqrt(-p / 3);\n      var t = Math.acos(3 * q / p / u) / 3; // D < 0 implies p < 0 and acos argument in [-1..1]\n\n      var k = 2 * Math.PI / 3;\n      roots = [u * Math.cos(t), u * Math.cos(t - k), u * Math.cos(t - 2 * k)];\n    }\n  } // Convert back from depressed cubic\n\n\n  for (var i = 0; i < roots.length; i++) roots[i] -= b / (3 * a);\n\n  return roots;\n}\n\nexports.default = solveCubic;","map":{"version":3,"sources":["/home/jannat/Drive/Projects/React native/Reacts/animator/node_modules/primitivo-svg/build/spacing/lib/solveCubicEquation.js"],"names":["Object","defineProperty","exports","value","cuberoot","x","y","Math","pow","abs","solveCubic","a","b","c","d","D","sqrt","p","q","roots","concat","u","t","acos","k","PI","cos","i","length","default"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction cuberoot(x) {\n    var y = Math.pow(Math.abs(x), 1 / 3);\n    return x < 0 ? -y : y;\n}\nfunction solveCubic(a, b, c, d) {\n    if (Math.abs(a) < 1e-8) {\n        // Quadratic case, ax^2+bx+c=0\n        a = b;\n        b = c;\n        c = d;\n        if (Math.abs(a) < 1e-8) {\n            // Linear case, ax+b=0\n            a = b;\n            b = c;\n            if (Math.abs(a) < 1e-8)\n                // Degenerate case\n                return [];\n            return [-b / a];\n        }\n        var D = b * b - 4 * a * c;\n        if (Math.abs(D) < 1e-8)\n            return [-b / (2 * a)];\n        else if (D > 0)\n            return [(-b + Math.sqrt(D)) / (2 * a), (-b - Math.sqrt(D)) / (2 * a)];\n        return [];\n    }\n    // Convert to depressed cubic t^3+pt+q = 0 (subst x = t - b/3a)\n    var p = (3 * a * c - b * b) / (3 * a * a);\n    var q = (2 * b * b * b - 9 * a * b * c + 27 * a * a * d) / (27 * a * a * a);\n    var roots;\n    if (Math.abs(p) < 1e-8) {\n        // p = 0 -> t^3 = -q -> t = -q^1/3\n        roots = [cuberoot(-q)];\n    }\n    else if (Math.abs(q) < 1e-8) {\n        // q = 0 -> t^3 + pt = 0 -> t(t^2+p)=0\n        roots = [0].concat(p < 0 ? [Math.sqrt(-p), -Math.sqrt(-p)] : []);\n    }\n    else {\n        var D = (q * q) / 4 + (p * p * p) / 27;\n        if (Math.abs(D) < 1e-8) {\n            // D = 0 -> two roots\n            roots = [(-1.5 * q) / p, (3 * q) / p];\n        }\n        else if (D > 0) {\n            // Only one real root\n            var u = cuberoot(-q / 2 - Math.sqrt(D));\n            roots = [u - p / (3 * u)];\n        }\n        else {\n            // D < 0, three roots, but needs to use complex numbers/trigonometric solution\n            var u = 2 * Math.sqrt(-p / 3);\n            var t = Math.acos((3 * q) / p / u) / 3; // D < 0 implies p < 0 and acos argument in [-1..1]\n            var k = (2 * Math.PI) / 3;\n            roots = [u * Math.cos(t), u * Math.cos(t - k), u * Math.cos(t - 2 * k)];\n        }\n    }\n    // Convert back from depressed cubic\n    for (var i = 0; i < roots.length; i++)\n        roots[i] -= b / (3 * a);\n    return roots;\n}\nexports.default = solveCubic;\n"]},"metadata":{},"sourceType":"script"}