{"ast":null,"code":"var _jsxFileName = \"/home/jannat/Drive/Projects/React native/Reacts/animator/src/Spinner.js\";\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport { morphing } from \"primitivo-svg\";\n\nfunction Spinner(props) {\n  const [width, setWidth] = useState(128);\n  const [height, setHeight] = useState(128);\n  const [pathsVisibility, setPathVisibility] = useState([]);\n  const durPerPath = props.duration / (props.numOfKeyPaths * 2 - 1);\n  const numOfColors = props.colors.length;\n  const animateColorDuration = numOfColors * durPerPath - props.shiftStep * props.numOfShapes + \"ms\";\n  useEffect(() => {\n    setPathVisibility(pathsVisibility => {\n      var proto = [];\n\n      for (let i = 0; i < props.numOfShapes; i++) {\n        proto[i] = setTimeout(() => true, props.shiftStep * i);\n      }\n\n      return proto;\n    });\n  }, []);\n  const morphParams = {\n    numOfKeyPaths: props.numOfKeyPaths,\n    loop: \"linear\"\n  };\n  var keySplines = [];\n  var keyTimes = [];\n  var numOfKeyTimes = morphParams.numOfKeyPaths * 2 - 2;\n  var keyTimesFactor = 1 / numOfKeyTimes;\n\n  for (let i = 0; i < morphParams.numOfKeyPaths * 2 - 1; i++) {\n    keyTimes[i] = i * keyTimesFactor;\n  }\n\n  for (let i = 0; i < morphParams.numOfKeyPaths * 2 - 2; i++) {\n    keySplines[i] = \"0.25 0 0.75 1\";\n  }\n\n  keySplines = keySplines.join(\";\");\n  keyTimes = keyTimes.join(\";\");\n  const pathParams = {\n    numOfSegments: props.numOfPathSegments,\n    depth: 0,\n    x: 0,\n    y: 0,\n    width,\n    height,\n    centerX: width / 2,\n    centerY: height / 2,\n    rotate: [0, 90],\n    numOfGroups: 1,\n    groups: [{\n      type: \"radial\",\n      incircle: true,\n      round: props.round,\n      distance: [1 - props.contrast, 1]\n    }]\n  };\n  const blob = useMemo(() => morphing(morphParams, pathParams), []);\n  const animateColorValues = props.colors.join(\";\");\n  const animatePathDuration = props.duration + \"ms\";\n  var paths = [];\n\n  for (let i = 0; i < props.numOfShapes; i++) {\n    paths.push(pathsVisibility[i] && /*#__PURE__*/React.createElement(\"path\", {\n      key: i,\n      fill: \"#3688FF\",\n      opacity: \"1\",\n      d: blob.dValuesFrames[0],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"animate\", {\n      begin: props.shiftStep * i + \"ms\",\n      attributeName: \"opacity\",\n      dur: \"100ms\",\n      repeatCount: \"1\",\n      from: \"0\",\n      to: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"animate\", {\n      begin: props.shiftStep * i + \"ms\",\n      attributeName: \"d\",\n      dur: animatePathDuration,\n      repeatCount: \"indefinite\",\n      calcMode: \"linear\",\n      keyTimes: keyTimes,\n      keySplines: keySplines,\n      values: blob.dValues,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"animate\", {\n      begin: props.shiftStep * i + \"ms\",\n      attributeName: props.type,\n      values: animateColorValues,\n      dur: animateColorDuration,\n      repeatCount: \"indefinite\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }\n    })));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"spinner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    viewBox: `0 0 ${width} ${height}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, paths), props.lable && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 29\n    }\n  }, props.lable));\n}\n\nexport default Spinner;","map":{"version":3,"sources":["/home/jannat/Drive/Projects/React native/Reacts/animator/src/Spinner.js"],"names":["React","useState","useEffect","useMemo","morphing","Spinner","props","width","setWidth","height","setHeight","pathsVisibility","setPathVisibility","durPerPath","duration","numOfKeyPaths","numOfColors","colors","length","animateColorDuration","shiftStep","numOfShapes","proto","i","setTimeout","morphParams","loop","keySplines","keyTimes","numOfKeyTimes","keyTimesFactor","join","pathParams","numOfSegments","numOfPathSegments","depth","x","y","centerX","centerY","rotate","numOfGroups","groups","type","incircle","round","distance","contrast","blob","animateColorValues","animatePathDuration","paths","push","dValuesFrames","dValues","lable"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\";\nimport { morphing } from \"primitivo-svg\";\n\nfunction Spinner(props) {\n    const [width, setWidth] = useState(128);\n    const [height, setHeight] = useState(128);\n    const [pathsVisibility, setPathVisibility] = useState([]);\n\n    const durPerPath = props.duration / (props.numOfKeyPaths * 2 - 1);\n    const numOfColors = props.colors.length;\n    const animateColorDuration =\n        numOfColors * durPerPath - props.shiftStep * props.numOfShapes + \"ms\";\n\n    useEffect(() => {\n        setPathVisibility(pathsVisibility => {\n            var proto = [];\n            for (let i = 0; i < props.numOfShapes; i++) {\n                proto[i] = setTimeout(() => true, props.shiftStep * i);\n            }\n            return proto;\n        });\n    }, []);\n\n    const morphParams = {\n        numOfKeyPaths: props.numOfKeyPaths,\n        loop: \"linear\"\n    };\n    var keySplines = [];\n    var keyTimes = [];\n    var numOfKeyTimes = morphParams.numOfKeyPaths * 2 - 2;\n    var keyTimesFactor = 1 / numOfKeyTimes;\n    for (let i = 0; i < morphParams.numOfKeyPaths * 2 - 1; i++) {\n        keyTimes[i] = i * keyTimesFactor;\n    }\n    for (let i = 0; i < morphParams.numOfKeyPaths * 2 - 2; i++) {\n        keySplines[i] = \"0.25 0 0.75 1\";\n    }\n    keySplines = keySplines.join(\";\");\n    keyTimes = keyTimes.join(\";\");\n\n    const pathParams = {\n        numOfSegments: props.numOfPathSegments,\n        depth: 0,\n        x: 0,\n        y: 0,\n        width,\n        height,\n        centerX: width / 2,\n        centerY: height / 2,\n        rotate: [0, 90],\n        numOfGroups: 1,\n        groups: [\n            {\n                type: \"radial\",\n                incircle: true,\n                round: props.round,\n                distance: [1 - props.contrast, 1]\n            }\n        ]\n    };\n    const blob = useMemo(() => morphing(morphParams, pathParams), []);\n\n    const animateColorValues = props.colors.join(\";\");\n    const animatePathDuration = props.duration + \"ms\";\n    var paths = [];\n    for (let i = 0; i < props.numOfShapes; i++) {\n        paths.push(\n            pathsVisibility[i] && (\n                <path key={i} fill=\"#3688FF\" opacity=\"1\" d={blob.dValuesFrames[0]}>\n                    <animate\n                        begin={props.shiftStep * i + \"ms\"}\n                        attributeName=\"opacity\"\n                        dur=\"100ms\"\n                        repeatCount=\"1\"\n                        from=\"0\"\n                        to=\"1\"\n                    />\n                    <animate\n                        begin={props.shiftStep * i + \"ms\"}\n                        attributeName=\"d\"\n                        dur={animatePathDuration}\n                        repeatCount=\"indefinite\"\n                        calcMode=\"linear\"\n                        keyTimes={keyTimes}\n                        keySplines={keySplines}\n                        values={blob.dValues}\n                    />\n                    <animate\n                        begin={props.shiftStep * i + \"ms\"}\n                        attributeName={props.type}\n                        values={animateColorValues}\n                        dur={animateColorDuration}\n                        repeatCount=\"indefinite\"\n                    />\n                </path>\n            )\n        );\n    }\n\n    return (\n        <div className=\"spinner\">\n            <svg viewBox={`0 0 ${width} ${height}`}>{paths}</svg>\n            {props.lable && <span>{props.lable}</span>}\n        </div>\n    );\n}\n\nexport default Spinner;\n"]},"metadata":{},"sourceType":"module"}