{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar pointToNumber_1 = __importDefault(require(\"./pointToNumber\"));\n\nvar calcTime_1 = __importDefault(require(\"./calcTime\"));\n\nvar calcPx_1 = __importDefault(require(\"./calcPx\"));\n\nvar ramda_1 = require(\"ramda\");\n\nvar pipeable_1 = require(\"fp-ts/lib/pipeable\");\n\nvar log = require(\"loglevel\").getLogger(\"spacing-log\");\n\nvar parseSplines = function (splines) {\n  return splines.reduce(function (acc, spline) {\n    return acc.concat([spline == null ? spline : pointToNumber_1.default(spline)]);\n  }, []);\n};\n\nvar initBzs = function (amount) {\n  return pipeable_1.pipe(ramda_1.update(0, [0, 0], Array(amount)), ramda_1.update(-1, [1, 1]));\n};\n\nvar calcKeySplines = function (parameters) {\n  var keyTimes = parameters.keyTimes,\n      keySplines = parameters.keySplines,\n      progression = parameters.progression;\n  var splines = parseSplines(keySplines);\n  log.debug(\"converted splines\", splines);\n  var bzs = initBzs(keyTimes.length);\n  var t;\n  var p, p1, p2, p3, p4, p5, p6, p7, p8, p9;\n  p = []; // proto bz\n\n  p4 = [1, 1];\n  var p3Index; // Calc keySplines\n\n  for (var i = 1; i < splines.length; i += 2) {\n    log.debug(\"p\", i);\n\n    if (splines[i] == null) {\n      log.debug(splines[i]);\n\n      if (!p3Index || i > p3Index) {\n        for (var end = i; i < splines.length; end++) {\n          // Find next key spline\n          if (splines[end] != null) {\n            p3Index = end;\n            break;\n          }\n        }\n      } // Calc points of a spline\n\n\n      var p1_1 = bzs[(i + i % 2) / 2 - 1];\n      var p2_1 = splines[i - 1];\n      var p3_1 = splines[p3Index];\n      p[1] = progression[(i + i % 2) / 2];\n      t = calcTime_1.default(p1_1[1], p2_1[1], p3_1[1], p4[1], p[1]);\n      p[0] = calcPx_1.default(p1_1[0], p2_1[0], p3_1[0], p4[0], t);\n      p5 = [(1 - t) * p1_1[0] + t * p2_1[0], (1 - t) * p1_1[1] + t * p2_1[1]];\n      p6 = [(1 - t) * p2_1[0] + t * p3_1[0], (1 - t) * p2_1[1] + t * p3_1[1]];\n      p7 = [(1 - t) * p3_1[0] + t * p4[0], (1 - t) * p3_1[1] + t * p4[1]];\n      p8 = [(1 - t) * p5[0] + t * p6[0], (1 - t) * p5[1] + t * p6[1]];\n      p9 = [(1 - t) * p6[0] + t * p7[0], (1 - t) * p6[1] + t * p7[1]];\n      splines[i - 1] = p5.concat();\n      splines[i] = p8.concat();\n      splines[i + 1] = p9.concat();\n      splines[p3Index] = p7.concat();\n      bzs[(i + i % 2) / 2] = p.concat();\n      keyTimes[(i + i % 2) / 2] = p[0];\n    }\n  }\n\n  log.debug(\"key times\", keyTimes);\n  log.debug(\"bzs\", bzs);\n  log.debug(\"splines before transformation\", splines.concat());\n  return {\n    parameters: parameters,\n    keySplinesList: splines,\n    keyTimesList: keyTimes,\n    bzs: bzs\n  };\n};\n\nexports.default = calcKeySplines;","map":{"version":3,"sources":["/home/jannat/Drive/Projects/React native/Reacts/animator/node_modules/primitivo-svg/build/spacing/lib/calcKeySplines.js"],"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","pointToNumber_1","require","calcTime_1","calcPx_1","ramda_1","pipeable_1","log","getLogger","parseSplines","splines","reduce","acc","spline","concat","default","initBzs","amount","pipe","update","Array","calcKeySplines","parameters","keyTimes","keySplines","progression","debug","bzs","length","t","p","p1","p2","p3","p4","p5","p6","p7","p8","p9","p3Index","i","end","p1_1","p2_1","p3_1","keySplinesList","keyTimesList"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar pointToNumber_1 = __importDefault(require(\"./pointToNumber\"));\nvar calcTime_1 = __importDefault(require(\"./calcTime\"));\nvar calcPx_1 = __importDefault(require(\"./calcPx\"));\nvar ramda_1 = require(\"ramda\");\nvar pipeable_1 = require(\"fp-ts/lib/pipeable\");\nvar log = require(\"loglevel\").getLogger(\"spacing-log\");\nvar parseSplines = function (splines) {\n    return splines.reduce(function (acc, spline) {\n        return acc.concat([spline == null ? spline : pointToNumber_1.default(spline)]);\n    }, []);\n};\nvar initBzs = function (amount) {\n    return pipeable_1.pipe(ramda_1.update(0, [0, 0], Array(amount)), ramda_1.update(-1, [1, 1]));\n};\nvar calcKeySplines = function (parameters) {\n    var keyTimes = parameters.keyTimes, keySplines = parameters.keySplines, progression = parameters.progression;\n    var splines = parseSplines(keySplines);\n    log.debug(\"converted splines\", splines);\n    var bzs = initBzs(keyTimes.length);\n    var t;\n    var p, p1, p2, p3, p4, p5, p6, p7, p8, p9;\n    p = []; // proto bz\n    p4 = [1, 1];\n    var p3Index;\n    // Calc keySplines\n    for (var i = 1; i < splines.length; i += 2) {\n        log.debug(\"p\", i);\n        if (splines[i] == null) {\n            log.debug(splines[i]);\n            if (!p3Index || i > p3Index) {\n                for (var end = i; i < splines.length; end++) {\n                    // Find next key spline\n                    if (splines[end] != null) {\n                        p3Index = end;\n                        break;\n                    }\n                }\n            }\n            // Calc points of a spline\n            var p1_1 = bzs[(i + (i % 2)) / 2 - 1];\n            var p2_1 = splines[i - 1];\n            var p3_1 = splines[p3Index];\n            p[1] = progression[(i + (i % 2)) / 2];\n            t = calcTime_1.default(p1_1[1], p2_1[1], p3_1[1], p4[1], p[1]);\n            p[0] = calcPx_1.default(p1_1[0], p2_1[0], p3_1[0], p4[0], t);\n            p5 = [(1 - t) * p1_1[0] + t * p2_1[0], (1 - t) * p1_1[1] + t * p2_1[1]];\n            p6 = [(1 - t) * p2_1[0] + t * p3_1[0], (1 - t) * p2_1[1] + t * p3_1[1]];\n            p7 = [(1 - t) * p3_1[0] + t * p4[0], (1 - t) * p3_1[1] + t * p4[1]];\n            p8 = [(1 - t) * p5[0] + t * p6[0], (1 - t) * p5[1] + t * p6[1]];\n            p9 = [(1 - t) * p6[0] + t * p7[0], (1 - t) * p6[1] + t * p7[1]];\n            splines[i - 1] = p5.concat();\n            splines[i] = p8.concat();\n            splines[i + 1] = p9.concat();\n            splines[p3Index] = p7.concat();\n            bzs[(i + (i % 2)) / 2] = p.concat();\n            keyTimes[(i + (i % 2)) / 2] = p[0];\n        }\n    }\n    log.debug(\"key times\", keyTimes);\n    log.debug(\"bzs\", bzs);\n    log.debug(\"splines before transformation\", splines.concat());\n    return { parameters: parameters, keySplinesList: splines, keyTimesList: keyTimes, bzs: bzs };\n};\nexports.default = calcKeySplines;\n"]},"metadata":{},"sourceType":"script"}